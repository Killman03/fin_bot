from aiogram import Router, Bot, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery
from aiogram.filters import StateFilter

from keyboards.keyboards import get_start_kb, get_callback_btns, get_cat_list
from database.requests import (
    get_cat_info,
    delete_cat,
    add_cat,
    change_cat_name,
)


cat_router = Router()


class ChangeCategoryState(StatesGroup):
    waiting_for_change = State()


class AddCategoryState(StatesGroup):
    add_name = State()
    add_plan = State()


@cat_router.callback_query(StateFilter('*'), F.data == 'settings')
async def settings(callback_query: CallbackQuery, bot: Bot, state: FSMContext):
    '''Settings menu'''
    if await state.get_state() is not None:
        await state.clear()
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:',
                                reply_markup=get_callback_btns(btns={'üìà –î–æ—Ö–æ–¥—ã': 'conf_inc', 'üìâ –†–∞—Å—Ö–æ–¥—ã': 'conf_exp', 'üîô –ù–∞–∑–∞–¥': 'start'}))


@cat_router.callback_query(F.data.startswith('conf_'))
async def callback_query_keyboard(callback_query: CallbackQuery):
    user_id = callback_query.from_user

    if callback_query.data.startswith('conf_inc'):
        cat_type = 1
    elif callback_query.data.startswith('conf_exp'):
        cat_type = 2

    keyboard = await get_cat_list(table_num=cat_type, user_id=user_id.id)

    text = '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ üìà' if cat_type == 1 else '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ üìâ'

    await callback_query.bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text=text, reply_markup=keyboard)


@cat_router.callback_query(F.data.startswith('inc_') | F.data.startswith('exp_'))
async def callback_query_keyboard(callback_query: CallbackQuery, bot: Bot, state: FSMContext):

    cat_id = int(callback_query.data.split('_')[1])
    cat_type = 1 if callback_query.data.startswith('inc_') else 2

    btns = {
        '‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å': f'rename_{cat_type}_{cat_id}',
        'üóë –£–¥–∞–ª–∏—Ç—å': f'delete_{cat_type}_{cat_id}',
        'üîô –ù–∞–∑–∞–¥': 'conf_inc' if cat_type == 1 else 'conf_exp'
    }

    cat_info_dict = await get_cat_info(cat_type, cat_id)

    plan = cat_info_dict['cat_info'].plan
    name = cat_info_dict['cat_info'].name
    total_month = cat_info_dict['cat_month']
    total_year = cat_info_dict['cat_year']

    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id,
                                text=f'–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {name}\n–ü–ª–∞–Ω–æ–≤–∞—è —Å—É–º–º–∞: {plan}\n'
                                     f'–í—Å–µ–≥–æ –∑–∞ –º–µ—Å—è—Ü: {total_month}\n–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: {total_year}\n'
                                     f'<i>–ï—Å–ª–∏ –≤—ã —É–¥–∞–ª–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —É–¥–∞–ª—è—Ç—å—Å—è –≤—Å–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ –Ω–µ–π –∑–∞–ø–∏—Å–∏</i>',
                                reply_markup=get_callback_btns(btns=btns))

########################### Deleting category #################################


@cat_router.callback_query(F.data.startswith('delete_'))
async def callback_query_keyboard(callback_query: CallbackQuery):
    cat_type, cat_id = map(int, callback_query.data.split('_')[1:])
    await delete_cat(cat_id, cat_type)
    await callback_query.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞", show_alert=True)

    text = (
        f'–ü—Ä–∏–≤–µ—Ç, {callback_query.message.from_user.first_name}! üëã –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤, '
        f'–ø–µ—Ä–µ–π–¥–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è. –ó–∞—Ç–µ–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 26*4 –∏–ª–∏ 236+189.\n'
        f'–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∂–º–∏ –∫–Ω–æ–ø–∫—É ‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n'
        f'–î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –ø—Ä–∏–¥–µ–º –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏! üí∞üíº')

    await callback_query.message.edit_text(text=text, reply_markup=await get_start_kb())


################################## FSM for changing category name ##################################


@cat_router.callback_query(StateFilter(None), F.data.startswith('rename_'))
async def callback_query_keyboard(callback_query: CallbackQuery, bot: Bot, state: FSMContext):
    cat_type, cat_id = map(int, callback_query.data.split('_')[1:])

    text = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤' if cat_type == 1 else '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤'

    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text=text)
    await state.update_data(cat_id=cat_id, cat_type=cat_type)
    await state.set_state(ChangeCategoryState.waiting_for_change)


@cat_router.message(ChangeCategoryState.waiting_for_change)
async def change_inc_name(message: Message, state: FSMContext):
    data = await state.get_data()
    await change_cat_name(data['cat_id'], data['cat_type'], message.text)
    await state.clear()

    text = (f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤, '
            f'–ø–µ—Ä–µ–π–¥–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è. –ó–∞—Ç–µ–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 26*4 –∏–ª–∏ 236+189.\n'
            f'–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∂–º–∏ –∫–Ω–æ–ø–∫—É ‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n'
            f'–î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –ø—Ä–∏–¥–µ–º –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏! üí∞üíº')

    kbrd = await get_start_kb()

    await message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ')
    await message.answer(text=text, reply_markup=kbrd)


########################### FSM for adding new category ###########################


@cat_router.callback_query(F.data.startswith('add_cat_exp') | F.data.startswith('add_cat_inc'))
async def callback_query_keyboard(callback_query: CallbackQuery, state: FSMContext):
    cat_type = 1 if callback_query.data == 'add_cat_inc' else 2

    text = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ üìà\n–õ—É—á—à–µ –∫ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —Å–º–∞–π–ª–∏–∫–∏. –¢–∞–∫ –≤–µ—Å–µ–ª–µ–µ –∏ –ø—Ä–∏–∫–æ–ª—å–Ω–µ–µ.üôÉ' \
    if cat_type == 1 else '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ üìâ\n–õ—É—á—à–µ –∫ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —Å–º–∞–π–ª–∏–∫–∏. –¢–∞–∫ –≤–µ—Å–µ–ª–µ–µ –∏ –ø—Ä–∏–∫–æ–ª—å–Ω–µ–µ.üôÇ'

    await callback_query.answer()
    await callback_query.message.answer(text=text, reply_markup=get_callback_btns(btns={'üö´ Cancel': 'settings'}))
    await state.update_data(cat_type=cat_type)
    await state.set_state(AddCategoryState.add_name)


@cat_router.message(AddCategoryState.add_name)
async def add_cat_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(AddCategoryState.add_plan)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–ª–∞–Ω–æ–≤—É—é —Å—É–º–º—É', reply_markup=get_callback_btns(btns={'üö´ Cancel': 'settings'}))


@cat_router.message(AddCategoryState.add_plan)
async def add_cat_plan(message: Message, state: FSMContext):
    user = message.from_user
    data = await state.get_data()
    await add_cat(data['cat_type'], data['name'], int(message.text), user_id=user.id)
    await state.clear()
    await (message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞', reply_markup=get_callback_btns(btns={'üîô –ù–∞–∑–∞–¥': 'settings',
                                                                                        '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é': 'start'})))